<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\ContentEntityTypeInterface;
use Drupal\file\FileInterface;
use Drupal\node\NodeInterface;

/**
 * ---------------------------------------------------------------------------
 *  Hook glue – delegates all work to the FileLinkUsageManager service.
 * ---------------------------------------------------------------------------
 */

/**
 * Implements hook_cron().
 *
 * Executes the lightweight scanner once per cron run (or per the setting in
 * Admin → Configuration → Media → File Link Usage).
 */
function filelink_usage_cron(): void {
  \Drupal::service('filelink_usage.manager')->runCron();
}

/**
 * Implements hook_entity_insert().
 */
function filelink_usage_entity_insert(EntityInterface $entity): void {
  $manager = \Drupal::service('filelink_usage.manager');

  switch ($entity->getEntityTypeId()) {
    case 'file':
      /** @var \Drupal\file\FileInterface $entity */
      $manager->addUsageForFile($entity);
      break;

    default:
      $entity_type = $entity->getEntityType();
      if ($entity_type instanceof ContentEntityTypeInterface) {
        \Drupal::service('filelink_usage.scanner')->scanEntity($entity);
      }
  }
}

/**
 * Implements hook_entity_update().
 */
function filelink_usage_entity_update(EntityInterface $entity): void {
  $entity_type = $entity->getEntityType();
  if ($entity_type instanceof ContentEntityTypeInterface) {
    \Drupal::service('filelink_usage.scanner')->scanEntity($entity);
  }
}

/**
 * Implements hook_entity_delete().
 */
function filelink_usage_entity_delete(EntityInterface $entity): void {
  $manager = \Drupal::service('filelink_usage.manager');

  switch ($entity->getEntityTypeId()) {
    case 'node':
      /** @var \Drupal\node\NodeInterface $entity */
      $manager->cleanupNode($entity);
      break;

    case 'file':
      /** @var \Drupal\file\FileInterface $entity */
      $manager->removeFileUsage($entity);
      break;

    default:
      // Purge any usage rows for other content entity types.
      $entity_type = $entity->getEntityType();
      if ($entity_type instanceof ContentEntityTypeInterface) {
        $manager->reconcileEntityUsage($entity->getEntityTypeId(), $entity->id(), TRUE);
      }
  }
}

/**
 * Mark a node as needing a rescan.
 *
 * Retained for backward compatibility with older hooks.
 */
function filelink_usage_mark_for_rescan(NodeInterface $node): void {
  \Drupal::service('filelink_usage.manager')->markEntityForScan('node', $node->id());
}
