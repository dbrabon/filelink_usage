<?php

/**
 * @file
 * Hooks and core integration for the File Link Usage module.
 */

use Drupal\node\NodeInterface;
use Drupal\file\FileInterface;

/**
 * Responds to entity insert events.
 */
function filelink_usage_entity_insert(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity instanceof NodeInterface) {
    // Scan new or updated node content for file links.
    \Drupal::service('filelink_usage.scanner')->scanNode($entity);
  }
  elseif ($entity instanceof FileInterface) {
    // A new file was added; update usage if this file matches any known links.
    \Drupal::service('filelink_usage.manager')->addUsageForFile($entity);
  }
}

/**
 * Responds to entity update events.
 */
function filelink_usage_entity_update(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity instanceof NodeInterface) {
    // Rescan updated node content for file links.
    \Drupal::service('filelink_usage.scanner')->scanNode($entity);
  }
  // (File updates typically don't need scanning; file usage changes are handled on insert or through node rescans.)
}

/**
 * Responds to entity delete events.
 */
function filelink_usage_entity_delete(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity instanceof NodeInterface) {
    // Clean up file usage records when a node is deleted.
    \Drupal::service('filelink_usage.manager')->cleanupNode($entity);
  }
  elseif ($entity instanceof FileInterface) {
    // Clean up file usage records when a file is deleted, if necessary.
    \Drupal::service('filelink_usage.manager')->removeFileUsage($entity);
  }
}

/**
 * Implements hook_cron().
 */
function filelink_usage_cron() {
  // Trigger the manager to perform scheduled scans (e.g., rescan marked nodes, purge old records).
  \Drupal::service('filelink_usage.manager')->runCron();
}
