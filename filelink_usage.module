<?php
/**
 * @file
 * Runtime hooks for the File Link Usage module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\file\FileInterface;

/**
 * Scan a new entity and reconcile its file usage.
 */
function filelink_usage_entity_insert(EntityInterface $entity): void {
  _filelink_usage_scan_and_reconcile($entity);
}

/**
 * Re‑scan an edited entity and reconcile its file usage.
 */
function filelink_usage_entity_update(EntityInterface $entity): void {
  _filelink_usage_scan_and_reconcile($entity);
}

/**
 * Remove all usage when an entity is deleted.
 */
function filelink_usage_entity_delete(EntityInterface $entity): void {
  \Drupal::service('filelink_usage.scanner')
    ->reconcileEntityUsage($entity->getEntityTypeId(), $entity->id(), TRUE);
}

/**
 * When a *new* managed file is created, add usage rows immediately
 * if that file was already referenced by hard‑coded links.
 */
function filelink_usage_file_insert(FileInterface $file): void {
  \Drupal::service('filelink_usage.scanner')->addUsageForFile($file);
}

/**
 * Cron entry point – runs the scheduled full scan.
 */
function filelink_usage_cron(): void {
  \Drupal::service('filelink_usage.scanner')->runCron();
}

/* -------------------------------------------------------------------------- */
/* Helper                                                                     */
/* -------------------------------------------------------------------------- */

/**
 * Scan an entity and reconcile its usage (create / edit cases).
 */
function _filelink_usage_scan_and_reconcile(EntityInterface $entity): void {
  $scanner = \Drupal::service('filelink_usage.scanner');

  $scanner->scan([$entity->id()], $entity->getEntityTypeId());
  $scanner->reconcileEntityUsage($entity->getEntityTypeId(), $entity->id());
}
